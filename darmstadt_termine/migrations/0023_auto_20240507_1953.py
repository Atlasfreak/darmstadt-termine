# Generated by Django 4.2.11 on 2024-05-07 17:53

from django.db import migrations
from django.db.models import Min


def add_scraper_run(apps, schema_editor):
    ScraperRun = apps.get_model("darmstadt_termine", "ScraperRun")
    Appointment = apps.get_model("darmstadt_termine", "Appointment")
    for scraper_run in ScraperRun.objects.all():
        appointments = Appointment.objects.filter(
            creation_date__gte=scraper_run.start_time,
            creation_date__lte=scraper_run.end_time,
        ).all()
        ThroughModel = Appointment.scraper_run.through
        ThroughModel.objects.bulk_create(
            [
                ThroughModel(
                    appointment_id=appointment.pk, scraperrun_id=scraper_run.pk
                )
                for appointment in appointments
            ]
        )
    deduped_appointments = Appointment.objects.values(
        "start_time", "end_time", "date", "location", "appointment_type"
    ).annotate(min_id=Min("pk"))
    for appointment_dict in deduped_appointments:
        appointment = Appointment.objects.get(pk=appointment_dict["min_id"])
        other_appointments = (
            Appointment.objects.filter(
                start_time=appointment_dict["start_time"],
                end_time=appointment_dict["end_time"],
                date=appointment_dict["date"],
                location=appointment_dict["location"],
                appointment_type=appointment_dict["appointment_type"],
            )
            .exclude(pk=appointment_dict["min_id"])
            .prefetch_related("scraper_run")
            .all()
        )
        ThroughModel = Appointment.scraper_run.through
        ThroughModel.objects.bulk_create(
            [
                ThroughModel(
                    appointment_id=appointment.pk,
                    scraperrun_id=scraper_run.pk,
                )
                for other_appointment in other_appointments
                for scraper_run in other_appointment.scraper_run.all()
            ]
        )
        other_appointments.delete()


class Migration(migrations.Migration):

    dependencies = [
        ("darmstadt_termine", "0022_appointment_scraper_run"),
    ]

    operations = [
        migrations.RunPython(add_scraper_run),
    ]
