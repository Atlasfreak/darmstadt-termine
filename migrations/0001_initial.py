# Generated by Django 4.2.6 on 2023-10-29 00:02

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppointmentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Bezeichnung')),
                ('index', models.PositiveIntegerField(verbose_name='Index')),
            ],
        ),
        migrations.CreateModel(
            name='AppointmentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Bezeichnung')),
                ('index', models.PositiveIntegerField(verbose_name='Index')),
                ('appointment_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='types', to='darmstadtTermine.appointmentcategory', verbose_name='Kategorie')),
            ],
            options={
                'unique_together': {('index', 'appointment_category')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='E-Mail')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Erstellungsdatum')),
                ('last_sent', models.DateTimeField(verbose_name='Zuletzt gesendet')),
                ('minimum_waittime', models.DurationField(default=datetime.timedelta(seconds=60), validators=[django.core.validators.MinValueValidator(datetime.timedelta(seconds=60), 'Die Wartezeit muss mindestens 1 Minute betragen.')], verbose_name='Mindest Wartezeit')),
                ('appointment_type', models.ManyToManyField(related_name='notifications', to='darmstadtTermine.appointmenttype', verbose_name='notifications')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Erstellungsdatum')),
                ('start_time', models.TimeField(verbose_name='Startzeit')),
                ('end_time', models.TimeField(verbose_name='Endzeit')),
                ('date', models.DateField(verbose_name='Datum')),
                ('appointment_type', models.ManyToManyField(related_name='appointments', to='darmstadtTermine.appointmenttype', verbose_name='Termine')),
            ],
            options={
                'unique_together': {('start_time', 'end_time', 'date')},
            },
        ),
    ]
